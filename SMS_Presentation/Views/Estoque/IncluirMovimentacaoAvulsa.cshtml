@using Presentation.Extensions
@model SMS_Solution.ViewModels.MovimentacaoAvulsaViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title">
        <h3 class="title">Inclusão de Lançamentos de Estoque</h3>
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
        <br />
    </div>
    @using (Html.BeginForm("IncluirMovimentacaoAvulsa", "Estoque", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container1" }))
    {
        <div class="row">
            <div class="col-lg-12 col-md-12 col-xs-12">
                <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Informações Gerais</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                <i class="fa fa-wrench"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-user">
                                <li>
                                    <a href="#">Configuração 1</a>
                                </li>
                                <li>
                                    <a href="#">Configuração 2</a>
                                </li>
                            </ul>
                            <a class="close-link">
                                <i class="fa fa-times"></i>
                            </a>
                        </div>
                    </div>

                    <div class="ibox-content">
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">Fechar</button>
                                @Html.ValidationSummary(false, "", new { @class = "test-danger" })
                            </div>
                        }
                        <div id="alertContainer"></div>
                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-xs-12">
                                @Html.ButtonLinkIndex(text: "Voltar", controller: "Estoque", action: "MontarTelaMovimentacaoAvulsa")
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-2 col-md-2 col-xs-12">
                                Tipo*
                                @Html.DropDownListFor(x => x.ProdutoInsumo, (SelectList)ViewBag.ProdutoInsumo, new { @class = "form-control", onchange = "FiltroProdIns($(this).val())", id = "prodIns" })
                                @Html.ValidationMessageFor(m => m.ProdutoInsumo, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-3 col-md-3 col-xs-12">
                                Operação*
                                @Html.DropDownListFor(x => x.MOVMT_IN_OPERACAO, (SelectList)ViewBag.Lista, "Selecionar", new { @class = "form-control", onchange = "FiltrarTipo($(this).val())", id = "operacao" })
                                @Html.ValidationMessageFor(m => m.MOVMT_IN_OPERACAO, "", new { @style = "color:red" })
                            </div>
                            <div id="entradas" class="col-lg-2 col-md-2 col-xs-12" style="display:none">
                                Tipo de Movimentação*
                                @Html.DropDownListFor(x => x.MOVMT_IN_TIPO_MOVIMENTO_ENTRADA, (SelectList)ViewBag.Entradas, "Selecionar", new { @class = "form-control", id = "tipoEntrada" })
                                @Html.ValidationMessageFor(m => m.MOVMT_IN_TIPO_MOVIMENTO_ENTRADA, "", new { @style = "color:red" })
                            </div>
                            <div id="saidas" class="col-lg-2 col-md-2 col-xs-12" style="display:none">
                                Tipo de Movimentação*
                                @Html.DropDownListFor(x => x.MOVMT_IN_TIPO_MOVIMENTO_SAIDA, (SelectList)ViewBag.Saidas, "Selecionar", new { @class = "form-control", id = "tipoSaida" })
                                @Html.ValidationMessageFor(m => m.MOVMT_IN_TIPO_MOVIMENTO_SAIDA, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-2 col-md-2 col-xs-12">
                                Data*
                                @Html.TextBoxFor(m => m.MOVMT_DT_MOVIMENTO, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", id = "data" })
                                @Html.ValidationMessageFor(m => m.MOVMT_DT_MOVIMENTO, "", new { @style = "color:red" })
                            </div>
                            @if (ViewBag.Perfil == "ADM")
                            {
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Filial*
                                    @Html.DropDownListFor(x => x.FILI_CD_ID, (SelectList)ViewBag.Filiais, "Selecionar", new { @class = "form-control", id = "filial" })
                                    @Html.ValidationMessageFor(m => m.FILI_CD_ID, "", new { @style = "color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12" style="display:none" id="filialDestino">
                                    <br />
                                    Filial Destino*
                                    @Html.DropDownListFor(x => x.FILI_DESTINO_CD_ID, (SelectList)ViewBag.Filiais, "Selecionar", new { @class = "form-control", id = "filialDestino" })
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-xs-12">
                                Motivo da Movimentação
                                @Html.TextBoxFor(m => m.MOVMT_DS_JUSTIFICATIVA, new { @class = "form-control", id = "motivo" })
                                @Html.ValidationMessageFor(m => m.MOVMT_DS_JUSTIFICATIVA, "", new { @style = "color:red" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 col-md-12 col-xs-12">
                <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Itens da movimentação</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                <i class="fa fa-wrench"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-user">
                                <li>
                                    <a href="#">Configuração 1</a>
                                </li>
                                <li>
                                    <a href="#">Configuração 2</a>
                                </li>
                            </ul>
                            <a class="close-link">
                                <i class="fa fa-times"></i>
                            </a>
                        </div>
                    </div>

                    <div class="ibox-content">
                        <div id="containerProduto">
                            <div class="form-group">
                                <div class="col-lg-8 col-md-8 col-xs-12">
                                    Produtos*
                                    @Html.DropDownList("reg", (SelectList)ViewBag.ListaProdutos, "Selecionar", new { @class = "form-control", id = "reg" })
                                </div>
                                @*<div class="col-lg-5 col-md-5 col-xs-12">
                                    Produto*
                                    @Html.DropDownListFor(x => x.PROD_CD_ID, (SelectList)ViewBag.ListaProdutos, "Selecionar", new { @class = "form-control" })
                                </div>*@ 
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Quantidade*
                                    @Html.TextBox("qtde", "", new { @class = "form-control", id = "qtde" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    <span style="margin-top: 20px;" class="btn btn-warning btn-sm" onclick="AddRegistro(1)">Confirmar</span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-xs-12">
                                    <table id="tblOperacao" style="width: 100%" class="table table-striped table-bordered table-hover dataTables-example">
                                        <thead style="background-color:lightsteelblue">
                                            <tr>
                                                <th>Produto</th>
                                                <th>Quantidade</th>
                                                <th>Ações</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-xs-12">
                                    @Html.HiddenFor(x => x.btnVolta, new { id = "btnVolta" })
                                    <span type="button" class="btn btn-warning btn-sm" onclick="setVolta()">Salvar e Voltar</span>
                                    @Html.ButtonActionSubmit(text: "Salvar e Continuar", htmlAttributes: new { id = "btnSubmit" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @using (Html.BeginForm("IncluirCompraExpressa", "Estoque", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container2" }))
    {
        <div class="row">
            <div class="col-lg-12 col-md-12 col-xs-12">
                <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Compra Expressa</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                <i class="fa fa-wrench"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-user">
                                <li>
                                    <a href="#">Configuração 1</a>
                                </li>
                                <li>
                                    <a href="#">Configuração 2</a>
                                </li>
                            </ul>
                            <a class="close-link">
                                <i class="fa fa-times"></i>
                            </a>
                        </div>
                    </div>

                    <div class="ibox-content">
                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-xs-12">
                                @Html.ButtonLinkIndex(text: "Voltar", controller: "Estoque", action: "MontarTelaMovimentacaoAvulsa")
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-3 col-md-3 col-xs-12">
                                Produto/Insumo*
                                @Html.DropDownListFor(x => x.ProdutoInsumoEx, (SelectList)ViewBag.ProdutoInsumo, new { @class = "form-control", onchange = "FiltroProdInsEx($(this).val())", id = "prodInsEx" })
                                @Html.ValidationMessageFor(m => m.ProdutoInsumoEx, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-3 col-md-3 col-xs-12">
                                Operação*
                                @Html.DropDownListFor(x => x.MOVMT_IN_OPERACAO_EX, (SelectList)ViewBag.Lista, "Selecionar", new { @class = "form-control", onchange = "FiltrarTipo($(this).val())", id = "operacaoEx" })
                                @Html.ValidationMessageFor(m => m.MOVMT_IN_OPERACAO_EX, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-3 col-md-3 col-xs-12">
                                Fornecedor*
                                @Html.DropDownListFor(x => x.FORN_CD_ID, (SelectList)ViewBag.Fornecedores, "Selecionar", new { @class = "form-control", id = "forn" })
                                @Html.ValidationMessageFor(m => m.FORN_CD_ID, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-3 col-md-3 col-xs-12">
                                Filial*
                                @Html.DropDownListFor(x => x.FILI_CD_ID_EX, (SelectList)ViewBag.Filiais, "Selecionar", new { @class = "form-control", id = "filialEx" })
                                @Html.ValidationMessageFor(m => m.FILI_CD_ID_EX, "", new { @style = "color:red" })
                            </div>
                        </div>

                        <div id="containerProdutoEx">
                            <div class="form-group">
                                <div class="col-lg-8 col-md-8 col-xs-12">
                                    Produtos*
                                    @Html.DropDownListFor(x => x.PROD_CD_ID, (SelectList)ViewBag.ListaProdutos, "Selecionar", new { @class = "form-control", id = "prodEx" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Quantidade*
                                    @Html.TextBoxFor(x => x.QTDE_PROD, new { @class = "form-control", id = "qtdeProd" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-xs-12">
                                @Html.ButtonActionSubmit("Confirmar")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Registros Lançados</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Configuração 1</a>
                            </li>
                            <li>
                                <a href="#">Configuração 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>

                <div class="ibox-content">
                    <div class="row">
                        <table style="width: 100%;" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead style="background-color:lightsteelblue">
                                <tr>
                                    <th>Nome</th>
                                    <th>Código de Barras</th>
                                    <th>Filial</th>
                                    <th>Data de Movimentação</th>
                                    <th>Quantidade Antes</th>
                                    <th>Quantidade Alterada</th>
                                    <th>Quantidade Depois</th>
                                    <th>Operação</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.flagProdIns == 1)
                                {
                                    if (ViewBag.ListaMovimento != null && (ViewBag.ListaMovimento as List<EntitiesServices.Model.MOVIMENTO_ESTOQUE_PRODUTO>).Count > 0)
                                    {
                                        foreach (var cond in (ViewBag.ListaMovimento as List<EntitiesServices.Model.MOVIMENTO_ESTOQUE_PRODUTO>))
                                        {
                                            <tr>
                                                @if (cond.PRODUTO != null)
                                                {
                                                    <td>@cond.PRODUTO.PROD_NM_NOME</td>
                                                    <td>@cond.PRODUTO.PROD_NR_BARCODE</td>
                                                }
                                                else
                                                {
                                                    <td>-</td>
                                                    <td>-</td>
                                                }
                                                @if (cond.FILIAL != null)
                                                {
                                                    <td>@cond.FILIAL.FILI_NM_NOME</td>
                                                }
                                                else
                                                {
                                                    <td>-</td>
                                                }
                                                <td>@cond.MOEP_DT_MOVIMENTO</td>
                                                <td>@cond.MOEP_QN_ANTES</td>
                                                <td>@cond.MOEP_QN_QUANTIDADE</td>
                                                <td>@cond.MOEP_QN_DEPOIS</td>
                                                @if (cond.MOEP_IN_TIPO_MOVIMENTO == 1)
                                                {
                                                    <td>Entrada</td>
                                                }
                                                else if (cond.MOEP_IN_TIPO_MOVIMENTO == 2)
                                                {
                                                    <td>Saída</td>
                                                }
                                                else if (cond.MOEP_IN_TIPO_MOVIMENTO == 4)
                                                {
                                                    <td>Tranferência entre filiais</td>
                                                }
                                                else
                                                {
                                                    <td>-</td>
                                                }
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/summernoteStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    <link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/summernote")
    @Scripts.Render("~/plugins/touchSpin")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/plugins/select2/select2.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
    <script src="~/Scripts/uploadAnexo.js"></script>

    <script>
        $("#lstProduto").select2({
            //data: filterSelect,
            ajax: {
                url: '../Produto/BuscaNome',
                type: 'POST',
                data: function (params) {
                    var query = {
                        nome: params.term
                    }
                    return query
                },
                processResults: function (data) {
                    console.log(data);
                    return {
                        results: data
                    }
                }
            },
            placeholder: 'Busque por NOME do PRODUTO',
            minimumInputLength: 1
        });
    </script>
    <script>
        function FiltroProdIns(val) {
            if (val == 1) {
                $('#containerProduto').show();
                $('#containerInsumo').hide();
            } else if (val == 2) {
                $('#containerInsumo').show();
                $('#containerProduto').hide();
            }
            else {
                $('#containerInsumo').hide();
                $('#containerProduto').hide();
            }

            $('#tblOperacao > tbody').html('');
        }

        function FiltroProdInsEx(val) {
            if (val == 1) {
                $('#containerProdutoEx').show();
                $('#containerInsumoEx').hide();

                $("#prodEx").val($("#prodEx option:first").val());
                $('#qtdeProd').val();
                $("#insEx").val($("#insEx option:first").val());
                $('#qtdeIns').val();
            }
            else if (val == 2) {
                $('#containerInsumoEx').show();
                $('#containerProdutoEx').hide();

                $("#prodEx").val($("#prodEx option:first").val());
                $('#qtdeProd').val();
                $("#insEx").val($("#insEx option:first").val());
                $('#qtdeIns').val();
            }
            else {
                $('#containerInsumoEx').hide();
                $('#containerProdutoEx').hide();

                $("#prodEx").val($("#prodEx option:first").val());
                $('#qtdeProd').val();
                $("#insEx").val($("#insEx option:first").val());
                $('#qtdeIns').val();
            }
        }

        function FiltrarTipo(val) {
            function zeroQtde() {
                $('#containerProduto').find('#qtde').val('');
                $('#containerInsumo').find('#qtde').val('');
                $('#containerProduto').find('#qtde').attr("readonly", false);
                $('#containerInsumo').find('#qtde').attr("readonly", false);
            }

            if (val == 1) {
                $('#entradas').show();
                $('#saidas').hide();
                $('#filialDestino').hide();

                $('#pwd-container1').show();
                $('#pwd-container2').hide();

                zeroQtde();

                $("#operacao").val('1');
                $("#operacaoEx").val('1');
            }
            else if (val == 2) {
                $('#entradas').hide();
                $('#saidas').show();
                $('#filialDestino').hide();

                $('#pwd-container1').show();
                $('#pwd-container2').hide();

                zeroQtde();

                $("#operacao").val('2');
                $("#operacaoEx").val('2');
            }
            else if (val == 3) {
                $('#entradas').hide();
                $('#saidas').hide();
                $('#filialDestino').hide();

                $('#containerProduto').find('#qtde').val("0");
                $('#containerInsumo').find('#qtde').val("0");
                $('#containerProduto').find('#qtde').attr("readonly", true);
                $('#containerInsumo').find('#qtde').attr("readonly", true);

                $('#pwd-container1').show();
                $('#pwd-container2').hide();

                $("#operacao").val('3');
                $("#operacaoEx").val('3');
            }
            else if (val == 4) {
                $('#entradas').hide();
                $('#saidas').hide();
                $('#filialDestino').show();

                $('#pwd-container1').show();
                $('#pwd-container2').hide();

                $("#operacao").val('4');
                $("#operacaoEx").val('4');

                zeroQtde();
            }
            else if (val == 5) {
                $('#pwd-container1').hide();
                $('#pwd-container2').show();

                $("#operacao").val('5');
                $("#operacaoEx").val('5');
            }
            else {
                $('#entradas').hide();
                $('#saidas').hide();
                $('#filialDestino').hide();

                $('#pwd-container1').show();
                $('#pwd-container2').hide();

                zeroQtde();
            }
        }

        $(function () {
            FiltroProdIns($('#prodIns').val());
            FiltroProdInsEx($('#prodInsEx').val());
            FiltrarTipo($('#operacao').val());
        });

        function AddRegistro(val) {
            if (val == 1) {
                if ($('#containerProduto').find('select[name=reg] option:selected').val() != "") {
                    var tipo = "";

                    if ($('#operacao').val() == 1) {
                        tipo = 'tipoEntrada';
                    } else if ($('#operacao').val() == 2) {
                        tipo = 'tipoSaida';
                    }

                    $('#tblOperacao > tbody').append('<tr>'
                        + '<input type="hidden" value="' + $('#containerProduto').find('select[name=reg] option:selected').val() + '" name="REGISTROS" />'
                        + '<input type="hidden" value="' + $('#containerProduto').find('#qtde').val() + '" name="QUANTIDADE" />'
                        + '<td>' + $('#containerProduto').find('select[name=reg] option:selected').text() + '</td>'
                        + '<td>' + $('#containerProduto').find('#qtde').val() + '</td>'
                        + '<td><span style="color: #337ab7; cursor: pointer;" class="fa-lg fa fa-trash-o" onclick="$(this).parent().parent().remove()"></span></td>'
                        + '</tr>'
                    );

                    $('#qtde').val('');

                    $('#containerProduto').find('select[name=reg] option:selected').prop('disabled', true);
                    $('select[name=reg]').select2();
                } else {
                    console.log('ERRO');
                    $('#alertContainer').html('<div class="alert alert-danger">'
                        + '<button type="button" class="close" data-dismiss="alert">Fechar</button>'
                        + '<p>Campo PRODUTO sem seleção</p>'
                        + '</div>');
                }
            } else if (val == 2) {
                if ($('#containerInsumo').find('select[name=reg] option:selected').val() != "") {
                    var tipo = "";

                    if ($('#operacao').val() == 1) {
                        tipo = 'tipoEntrada';
                    } else if ($('#operacao').val() == 2) {
                        tipo = 'tipoSaida';
                    }

                    $('#tblOperacao > tbody').append('<tr>'
                        + '<input type="hidden" value="' + $('#containerInsumo').find('select[name=reg] option:selected').val() + '" name="REGISTROS" />'
                        + '<input type="hidden" value="' + $('#containerInsumo').find('#qtde').val() + '" name="QUANTIDADE" />'
                        + '<td>' + $('#containerInsumo').find('select[name=reg] option:selected').text() + '</td>'
                        + '<td>' + $('#containerInsumo').find('#qtde').val() + '</td>'
                        + '<td><span style="color: #337ab7; cursor: pointer;" class="fa-lg fa fa-trash-o" onclick="$(this).parent().parent().remove()"></span></td>'
                        + '</tr>'
                    );

                    $('#qtde').val('');

                    $('#containerInsumo').find('select[name=reg] option:selected').prop('disabled', true);
                    $('select[name=reg]').select2();
                } else {
                    console.log('ERRO');
                    $('#alertContainer').html('<div class="alert alert-danger">'
                        + '<button type="button" class="close" data-dismiss="alert">Fechar</button>'
                        + '<p>Campo INSUMO sem seleção</p>'
                        + '</div>');
                }
            }
        }
    </script>

    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
            $("#data").mask("99/99/9999");
            $("#hora").mask("99:99");
            $("#datatime").mask("99/99/9999 99:99:99");
        });
    </script>
    @Scripts.Render("~/plugins/iCheck")

    <script>
        $(function () {
            $('select[name=reg]').select2({
                placeholder: 'Selecionar'
            });

            $('#prodEx').select2({
                placeholder: 'Selecionar'
            });
            $('#insEx').select2({
                placeholder: 'Selecionar'
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });
    </script>
    <script type="text/javascript" language="javascript">
        $(function () {
            $('.date-picker').datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    showOn: "focus"
                }
            )
                .css("display", "normal")
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Selecione uma data",
                    text: false
                });
        });
    </script>
    <script type="text/javascript" language="javascript">
        $(function () {
            $('.datetime-picker').datetimepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    controlType: 'select',
                    showSecond: "false",
                    timeFormat: 'HH:mm',
                    locale: 'pt-br',
                    hourText: 'Hora',
                    minuteText: 'Minuto',
                    secondText: 'Segundo',
                    currentText: 'Agora',
                    closeText: 'Feito',
                    showOn: "focus"
                }
            )
                .css("display", "normal")
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Selecione uma data",
                    text: false
                });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('.summernote').summernote();

        });

        var edit = function () {
            $('.click2edit').summernote({ focus: true });
        };

        var save = function () {
            var aHTML = $('.click2edit').code(); //save HTML If you need(aHTML: array).
            $('.click2edit').destroy();
        };
    </script>
    <script type="text/javascript">
        $(".touchspin2").TouchSpin({
            min: 0,
            max: 5,
            step: 1,
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });
    </script>
    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
            $("#dn").mask("99/99/9999");
            $("#tel").mask("(99) 9999-9999");
            $("#tel1").mask("(99) 99999-9999");
            $("#lim").mask("###.###.##9,99");
            $("#hora").mask("99:99:99");
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Inclusão em andamento!')
            });

            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                    + shortCutFunction
                    + "](\""
                    + msg
                    + (title ? "\", \"" + title : '')
                    + "\")\n\ntoastr.options = "
                    + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    <script>
        function setVolta() {
            $('#btnVolta').val(1);
            $('#btnSubmit').click();
        }
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
